pipeline {
    agent {
        node {
        label 'AGENT-1'
        }
    }
    environment {
        appVersion = ''
        REGION = 'us-east-1'
        ACC_ID = '025523569021'
        PROJECT = 'roboshop'
        COMPONENT = 'catalogue'
    }
    options {
        timeout(time: 30, unit: 'MINUTES')
        disableConcurrentBuilds()
        ansiColor('xterm')
    }

    stages{
        stage('init') {
            steps {
                script {
                    withAWS(credentials: 'aws-creds', region: 'us-east-1') {
                        sh """
                            cd 10-sg
                            terraform init -reconfigure
                        """
                    }
                }
            }
        }
        stage('plan') {
            steps {
                script {
                    withAWS(credentials: 'aws-creds', region: 'us-east-1') {
                        sh """
                            cd 10-sg
                            terraform plan
                        """
                    }
                }
            }
        }
        stage('apply') {
            steps {
                script {
                    withAWS(credentials: 'aws-creds', region: 'us-east-1') {
                        sh """
                            cd 10-sg
                            terraform apply -auto-approve
                        """
                    }
                }
            }
        }
        stage('Bastion & EKS') {
            parallel {
                stage('Trigger Bastion') {
                    steps {
                        script {
                            withAWS(credentials: 'aws-creds', region: 'us-east-1') {
                                build job: '20-bastion', propagate: false, wait: false
                            }
                        }
                    }
                }
                stage('Trigger EKS') {
                    steps {
                        script {
                            withAWS(credentials: 'aws-creds', region: 'us-east-1') {
                                build job: '80-eks', propagate: false, wait: false
                            }
                        }
                    }
                }
            }
        }
        stage('Trigger ACM & ALB') {
            steps {
                script {
                    withAWS(credentials: 'aws-creds', region: 'us-east-1') {
                        build job: '60-acm', propagate: true, wait: true
                        build job: '70-Ingress-alb', propagate: false, wait: false
                    }
                }
            }
        }
    }    

    post {
        always {
            echo 'I will always says Hello again!'
            deleteDir()
        }
        success {
            echo 'Hello Success'
        }
        failure {
            echo 'Hello Failure'
        }
    }
}

